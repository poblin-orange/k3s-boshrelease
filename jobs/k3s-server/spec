---
name: k3s-server

packages:
- k3s
- k9s
- kubectl-k3s
- nerdctl
templates:
  config/bpm.yml: config/bpm.yml
  bin/pre-start.erb: bin/pre-start
  bin/post-start.erb: bin/post-start  
  bin/pre-stop.erb: bin/pre-stop
  bin/post-stop.erb: bin/post-stop
  bin/post-deploy.erb: bin/post-deploy
  bin/drain.erb: bin/drain
  bin/ctl.erb: bin/ctl
  config/registries.yaml.erb: config/registries.yaml
  config/registry.ca.erb: config/registry.ca
  config/registry.cert.erb: config/registry.cert
  config/registry.key.erb: config/registry.key
  config/token.csv.erb: config/token.csv
  bin/envrc: bin/envrc
  bin/setup-user-env.erb: bin/setup-user-env
  bin/k3s-killall.sh: bin/k3s-killall.sh

  config/datastore-cafile.erb: config/datastore-cafile
  config/datastore-certfile.erb: config/datastore-certfile
  config/datastore-keyfile.erb: config/datastore-keyfile
  
  config/additional-manifest.yaml.erb: config/additional-manifest.yaml
  config/audit-policy.yaml.erb: config/audit-policy.yaml
  config/kubelet-config.yaml.erb: config/kubelet-config.yaml

# Documentation https://bosh.io/docs/links.html
# Tutorial      https://gist.github.com/Amit-PivotalLabs/c39528248b8cdc4ba8e347f8aa68abb6
consumes:
- name: k3s-server
  type: k3s-server
  optional: false

provides:
- name: k3s-server
  type: k3s-server

properties:
  containerd_registry:
    description: containerd registry configuration

  registry.mirrors.tls.cert:
    description: private registry certificate

  registry.mirrors.tls.key:
    description: private registry private key

  registry.mirrors.tls.ca:
    description: private registry ca

  k3s.v:
    description: "(logging) Number for the log level verbosity (default: 0)"
    default: 0

  k3s.bind-address value:
    description: "(listener) k3s bind address (default: 0.0.0.0)"
    default: 0.0.0.0

  k3s.flannel-backend:
    description: (networking) One of 'none', 'vxlan', 'ipsec', or 'wireguard'
    default: vxlan

  k3s.disable-network-policy:
    description: "(components) Disable k3s default network policy controller"

  k3s.disable-kube-proxy:
    description: "(components) Disable running kube-proxy"

  k3s.token:
    description: (cluster) Shared secret used to join a server or agent to a cluster [$K3S_TOKEN]

  k3s.kubelet-args:
    description: (agent/flags) Customized flag for kubelet process
    default: []

  k3s.node_name_prefix:
    description: explicitly set k8s node name. If not set, <instance-group-name>-<index> is set automatically. If set, name is <node_name_prefix>-<index> 

# Disable harware options on VxLAN interface
  k3s.disable-vxlan-hardware-options:
    description: Disable VxLAN harware options on private interface
    default:
      - tx-udp_tnl-segmentation
      - tx-udp_tnl-csum-segmentation
#     - tx-checksum-ip-generic

# Disable defaut k3s components
  k3s.disable: 
    description: (components) Do not deploy packaged components and delete any deployed components (valid itemms are coredns, servicelb, traefik, local-storage, metrics-server)
    default: []

  k3s.disable-cloud-controller:
    description: (components) If set,  Disable k3s default cloud controller manager

  k3s.set-provider-id-prefix:
    description: If set, the default provider id (k3s://<instance>-<index> will be set as kubelet arg as <prefix>://<instance>-<index>

# Additional label and taints (added to k3s and bosh default labels) 
  k3s.node-labels:
    description: (agent/node) Registering and starting kubelet with set of labels
    default: []
  k3s.node-taints: 
    description: (agent/node) Registering kubelet with set of taints.format is key=value:Effect)
    default: []

# Additional manifests to apply
  k3s.additional-manifests:
    default: []
    description: array of additionnel yaml to apply at k3s start

## drain options
  k3s.drain.delete-emptydir-data:
    description:  continue even if there are pods using emptyDir (local data that will be deleted when the node is drained).
    default: true

  k3s.drain.disable-eviction: 
    description: force drain to use delete, even if eviction is supported. This will bypass checking PodDisruptionBudgets, use with caution
    default: false

  k3s.drain.grace-period:
    description: period of time in seconds given to each pod to terminate gracefully. If negative, the default value specified in the pod will be used.
    default: -1

  k3s.drain.ignore-daemonsets:
    description: Ignore DaemonSet-managed pods.
    default: true

  k3s.drain.skip-wait-for-delete-timeout:
    description: If pod DeletionTimestamp older than N seconds, skip waiting for the pod. Seconds must be greater than 0 to skip.
    default: 0

  k3s.drain.timeout:
    description: The length of time to wait before giving up, zero means infinite
    default: 90s 

  k3s.drain.pod-selector: #Not implemented
    description:  Label selector to filter pods on the node

  k3s.drain.selector:  #Not implemented
    description: Selector (label query) to filter on

  k3s.bosh-post-start-delay-seconds:
    description: bosh post start tempo, to let the kubelet start the pods before bosh triggers another node update
    default: 30

  k3s.do-not-killall-on-post-stop:
    description: if set, the bosh post-stop script wont leverage k3s-killall.sh script
    default: false 

# db options
  k3s.embedded-ha-etcd:
    description: if set, use embedded etcd in ha mode. requires an odd number of servers, overrides datastore-endpoints

  k3s.datastore-endpoint:
    description: Specify etcd, Mysql, Postgres, or Sqlite (default) data source name

  k3s.datastore-cafile:
    description: TLS Certificate Authority file used to secure datastore backend communication

  k3s.datastore-certfile:
    description: TLS certification file used to secure datastore backend communication

  k3s.datastore-keyfile:
    description: TLS key file used to secure datastore backend communication

# args
  k3s.kube-apiserver-arg:
    description: (flags) Customized flag for kube-apiserver process
    default: []

  k3s.kube-scheduler-arg:
    description: (flags) Customized flag for kube-scheduler process
    default: []

  k3s.kube-controller-manager-arg:
    description: (flags) Customized flag for kube-controller-manager process
    default: []

  k3s.kube-proxy-arg:
    description: (agent/flags) Customized flag for kube-proxy process
    default: []

  k3s.kube-cloud-controller-manager-arg:
    description:  (flags) Customized flag for kube-cloud-controller-manager process
    default: []

# token-file
  k3s.token-file-content:
    description: token-file content. see https://kubernetes.io/docs/reference/access-authn-authz/authentication/#static-token-file

  k3s.master_vip_api:
    description: externaly defined vip ip for HA k3s (enables multi master instance groups). This is used for public api access, tls-san, and agents to server communication

  k3s.additional_tls_sans:
    description: array of additionnal tls-san for k8s api (added to default, ip, bosh-dns alias, or master vip if set)
    default: []
    
# kubelet config
  k3s.kubelet-config-file:
    description: content of kubelet config file, to enable eg GraceFull Node Shutdown
    default: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      shutdownGracePeriod: 30s
      shutdownGracePeriodCriticalPods: 10s

  k3s.containerd_additional_env_vars:
    description: additional env vars (name/value map array) to set for containerd (the key will be prefixed with CONTAINERD_, and set in k3s launch context
    default: []

# cidr config
  k3s.cluster-cidr:
    description: "(networking) IPv4/IPv6 network CIDRs to use for pod IPs (default: 10.42.0.0/16)"
  k3s.service-cidr:
    description: "(networking) IPv4/IPv6 network CIDRs to use for service IPs (default: 10.43.0.0/16)"
  k3s.cluster-dns:
    description: "(networking) IPv4 Cluster IP for coredns service. Should be in your service-cidr range (default: 10.43.0.10)"

# audit policy file
  k3s.audit-policy-file:
    description: if set, defines and activate audit policy for k8s server
    default: |
      apiVersion: audit.k8s.io/v1 # This is required.
      kind: Policy
      
      # Prevent requests in the RequestReceived stage from generating audit events.
      omitStages:
        - "RequestReceived"
      
      rules:
        # Log "pods/log", "pods/status" at Metadata level
        - level: Metadata
          resources:
          - group: ""
            resources: ["pods/log", "pods/status"]
        # Exclude logging requests to a configmap called "controller-config"
        - level: None
          resources:
          - group: ""
            resources: ["configmaps"]
            resourceNames: ["controller-config"]
        # Don't log watch requests by the "system:kube-proxy" on endpoints or services
        - level: None
          users: ["system:kube-proxy"]
          verbs: ["watch"]
          resources:
          - group: "" # core API group
            resources: ["endpoints", "services"]
        # Log deployment changes at RequestResponse level
        - level: Metadata
          resources:
          - group: ""
            resources: ["deployments"]
        # Log service changes at metadata level
        - level: Metadata
          resources:
          - group: ""
            resources: ["services"]
        # Log the request body of configmap changes in the kube-system namespace.
        - level: Request
          resources:
          - group: "" # core API group
            resources: ["configmaps"]
          # You can use an empty string [""] to select resources not associated with a namespace.
          namespaces: ["kube-system"]
        # Log configmap and secret changes in all other namespaces at the Metadata level.
        - level: Metadata
          resources:
          - group: "" # core API group
            resources: ["secrets", "configmaps","serviceaccounts/token"] #see https://github.com/kubernetes/kubernetes/issues/98612#issuecomment-962088315
        # Log all other resources in core and extensions at the Request level.
        - level: Request
          resources:
          - group: "" # core API group
          - group: "extensions" # Version of group should NOT be included.
        # A wild-card rule to log all other requests at the Metadata level.
        - level: Metadata
          # Long-running requests like watches that fall under this rule will not
          # generate an audit event in RequestReceived.
          omitStages:
            - "RequestReceived"

#done    
#   -v value                                   (logging) Number for the log level verbosity (default: 0)
#   --bind-address value                       (listener) k3s bind address (default: 0.0.0.0)
#   --flannel-backend value                    (networking) One of 'none', 'vxlan', 'ipsec', or 'wireguard' (default: "vxlan")
#   --token value, -t value                    (cluster) Shared secret used to join a server or agent to a cluster [$K3S_TOKEN]
#   --datastore-endpoint value                 (db) Specify etcd, Mysql, Postgres, or Sqlite (default) data source name [$K3S_DATASTORE_ENDPOINT]
#   --datastore-cafile value                   (db) TLS Certificate Authority file used to secure datastore backend communication [$K3S_DATASTORE_CAFILE]
#   --datastore-certfile value                 (db) TLS certification file used to secure datastore backend communication [$K3S_DATASTORE_CERTFILE]
#   --datastore-keyfile value                  (db) TLS key file used to secure datastore backend communication [$K3S_DATASTORE_KEYFILE]
#   --kube-apiserver-arg value                 (flags) Customized flag for kube-apiserver process
#   --kube-scheduler-arg value                 (flags) Customized flag for kube-scheduler process
#   --kube-controller-manager-arg value        (flags) Customized flag for kube-controller-manager process
#   --kube-cloud-controller-manager-arg value  (flags) Customized flag for kube-cloud-controller-manager process
#   --kubelet-arg value                        (agent/flags) Customized flag for kubelet process
#   --kube-proxy-arg value                     (agent/flags) Customized flag for kube-proxy process

#todo
#   --tls-san value                            (listener) Add additional hostname or IP as a Subject Alternative Name in the TLS cert
#   --node-name value                          (agent/node) Node name [$K3S_NODE_NAME]
#   --with-node-id                             (agent/node) Append id to node name
#   --docker                                   (agent/runtime) Use docker instead of containerd
#   --node-ip value, -i value                  (agent/networking) IP address to advertise for node
#   --node-external-ip value                   (agent/networking) External IP address to advertise for node
